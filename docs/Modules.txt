• Major module: Use a framework to build the backend.
In this major module, you are required to use a specific web framework for backend
development: Fastify with Node.js .
You can create the backend without using the constraints of this
module by using the default backend language (as specified above in
the mandatory part). However, this module will only be valid if you
follow its requirements.

• Minor module: Use a framework or toolkit to build the front-end.
Your frontend development must use the Tailwind CSS in addition of the Typescript, and nothing else.
You can create a front-end without using the constraints of this
module by using the default front-end directives (as specified above
in the mandatory part). However, this module will only be valid if
you follow its requirements.

• Minor module: Use a database for the backend -and more.
The designated database for all DB instances in your project is SQLite This choice
ensure data consistency and compatibility across all project components and may
be a prerequisite for other modules, such as the backend Framework module.

• Major module: Standard user management, authentication and users across tournaments.
	◦ Users can securely subscribe to the website.
	◦ Registered users can securely log in.
	◦ Users can select a unique display name to participate in tournaments.
	◦ Users can update their information.
	◦ Users can upload an avatar, with a default option if none is provided.
	◦ Users can add others as friends and view their online status.
	◦ User profiles display stats, such as wins and losses.
	◦ Each user has a Match History including 1v1 games, dates, and relevant details, accessible to logged-in users.
The management of duplicate usernames/emails is at your discretion;
please ensure a logical solution is provided

• Major module: Implement remote authentication.
In this major module, the goal is to implement a secure external authentication
system using OAuth 2.0 .
You are free to choose any OAuth-compatible provider (e.g., Google,
GitHub, etc.).
Key features and objectives include:
◦ Integrate the authentication system, allowing users to securely sign in.
◦ Obtain the necessary credentials and permissions from the authority to enable
secure login.
◦ Implement user-friendly login and authorization flows that adhere to best practices and security standards.
◦ Ensure the secure exchange of authentication tokens and user information
between the web application and the authentication provider.
This major module aims to provide a remote user authentication, offering users a
secure and convenient way to access the web application

• Major module: Remote players
It should be possible for two players to play remotely. Each player is located on a
separated computer, accessing the same website and playing the same Pong game.
Consider network issues, such as unexpected disconnections or lag.
You must offer the best user experience possible.

• Major module: Add another game with user history and matchmaking.
The goal of this major module, is to introduce a new game, distinct from Pong, and
incorporate features such as user history tracking and matchmaking. Key features
and objectives include:
◦ Develop a new, engaging game to diversify the platform’s offerings and entertain users.
◦ Implement user history tracking to record and display individual users’ gameplay statistics.
◦ Create a matchmaking system to allow users to find opponents and participate
in fair and balanced matches.
◦ Ensure that user game history and matchmaking data are stored securely and
remain up-to-date.
◦ Optimize the performance and responsiveness of the new game to provide an
enjoyable user experience. Regularly update and maintain the game to fix
bugs, add new features, and enhance gameplay.
This major module aims to expand your platform by introducing a new game,
enhancing user engagement with gameplay history, and facilitating matchmaking
for an enjoyable gaming experience.

• Minor module: Game customization options.
In this minor module, the goal is to provide customization options for all available
games on the platform. Key features and objectives include:
◦ Offer customization features, such as power-ups, attacks, or different maps,
that enhance the gameplay experience.
◦ Allow users to choose a default version of the game with basic features if they
prefer a simpler experience.
◦ Ensure that customization options are available and applicable to all games
offered on the platform.
◦ Implement user-friendly settings menus or interfaces for adjusting game parameters.
◦ Maintain consistency in customization features across all games to provide a
unified user experience.
This module aims to give users the flexibility to tailor their gaming experience
across all available games by providing a variety of customization options while
also offering a default version for those who prefer a straightforward gameplay
experience.

• Major module: Live Chat.
In this module, you need to create a chat feature for users:
◦ The user should be able to send direct messages to other users.
◦ The user should be able to block other users, preventing them from seeing any
further messages from the blocked account.
◦ The user should be able to invite other users to play a Pong game through the
chat interface.
◦ The tournament system should be able to notify users about the next game.
◦ The user should be able to access other players’ profiles through the chat
interface.

• Minor module: User and Game Stats Dashboards.
In this minor module, the goal is to introduce dashboards that display statistics for
individual users and game sessions. Key features and objectives include:
◦ Create user-friendly dashboards that provide users with insights into their
gaming statistics.
◦ Develop a separate dashboard for game sessions, showing detailed statistics,
outcomes, and historical data for each match.
◦ Ensure that the dashboards offer an intuitive and informative user interface
for tracking and analyzing data.
◦ Implement data visualization techniques, such as charts and graphs, to present
statistics in a clear and visually appealing manner.
◦ Allow users to access and explore their own gaming history and performance
metrics conveniently.
◦ Feel free to add any metrics you deem useful.
This minor module aims to empower users with the ability to monitor their gaming
statistics and game session details through user-friendly dashboards, providing a
comprehensive view of their gaming experience.

• Minor module: GDPR compliance options with user anonymization, local data
management, and account deletion.
The goal of this minor module is to introduce GDPR compliance options that allow
users to exercise their data privacy rights. Key features and objectives include:
◦ Implement GDPR-compliant features that enable users to request anonymization of their personal data, ensuring that their identity and sensitive information are protected.
◦ Provide tools for users to manage their local data, including the ability to
view, edit, or delete their personal information stored within the system.
◦ Offer a streamlined process for users to request the permanent deletion of
their accounts, including all associated data, ensuring compliance with data
protection regulations.
◦ Maintain clear and transparent communication with users regarding their data
privacy rights, with easily accessible options to exercise these rights.
This minor module aims to enhance user privacy and data protection by offering
GDPR compliance options that empower users to control their personal information
and exercise their data privacy rights within the system.
If you are not familiar with the General Data Protection Regulation (GDPR), it
is essential to understand its principles and implications, especially regarding user
data management and privacy. The GDPR is a regulation that aims to protect the
personal data and privacy of individuals within the European Union (EU) and the
European Economic Area (EEA). It sets out strict rules and guidelines for organizations on how they should handle and process personal data.
To gain a better understanding of the GDPR and its requirements, it is strongly
recommended to visit the official website of the European Commission on data
protection1
. This website provides comprehensive information about the GDPR,
including its principles, objectives, and user rights. It also offers additional resources to delve deeper into the topic and ensure compliance with the regulation.
If you are unfamiliar with the GDPR, please take the time to visit the provided link
and familiarize yourself with the regulations before proceeding with this project.
https://commission.europa.eu/law/law-topic/data-protection/data-protection-eu_en

• Major module: Implement Two-Factor Authentication (2FA) and JWT.
The goal of this major module is to enhance security and user authentication
by introducing Two-Factor Authentication (2FA) and utilizing JSON Web Tokens
(JWT). Key features and objectives include:
◦ Implement Two-Factor Authentication (2FA) as an additional layer of security
for user accounts, requiring users to provide a secondary verification method,
such as a one-time code, in addition to their password.
◦ Utilize JSON Web Tokens (JWT) as a secure method for authentication and
authorization, ensuring that user sessions and access to resources are managed
securely.
◦ Provide a user-friendly setup process for enabling 2FA, with options for SMS
codes, authenticator apps, or email-based verification.
◦ Ensure that JWT tokens are issued and validated securely to prevent unauthorized access to user accounts and sensitive data.
This major module aims to strengthen user account security by offering Two-Factor
Authentication (2FA) and enhanci

• Major module: Designing the Backend as Microservices.
The goal of this major module is to architect the backend of the system using a
microservices approach. Key features and objectives include:
◦ Divide the backend into smaller, loosely-coupled microservices, each responsible for specific functions or features.
◦ Define clear boundaries and interfaces between microservices to enable independent development, deployment, and scaling.
◦ Implement communication mechanisms between microservices, such as RESTful APIs or message queues, to facilitate data exchange and coordination.
◦ Ensure that each microservice is responsible for a single, well-defined task or
business capability, promoting maintainability and scalability.
This major module aims to enhance the system’s architecture by adopting a microservices design approach, enabling greater flexibility, scalability, and maintainability of the backend components.

• Minor module: Expanding Browser Compatibility.
In this minor module, the objective is to enhance the compatibility of the web
application by adding support for an additional web browser. Key features and
objectives include:
◦ Extend browser support to include an additional web browser, ensuring that
users can access and use the application seamlessly.
◦ Conduct thorough testing and optimization to ensure that the web application
functions correctly and displays correctly in the newly supported browser.
◦ Address any compatibility issues or rendering discrepancies that may arise in
the added web browser.
◦ Ensure a consistent user experience across all supported browsers, maintaining
usability and functionality.
This minor module aims to broaden the accessibility of the web application by
supporting an additional web browser, providing users with more choices for their
browsing experience

• Minor module: Multiple language support.
In this minor module, the objective is to ensure that your website supports multiple
languages to cater to a diverse user base. Key features and goals include:
◦ Implement support for a minimum of three languages on the website to accommodate a broad audience.
◦ Provide a language switcher or selector that allows users to easily change the
website’s language based on their preferences.
◦ Translate essential website content, such as navigation menus, headings, and
key information, into the supported languages.
◦ Ensure that users can navigate and interact with the website seamlessly, regardless of the selected language.
◦ Consider using language packs or localization libraries to simplify the translation process and maintain consistency across different languages.
◦ Allow users to set their preferred language as the default for subsequent visits.
This minor module aims to enhance the accessibility and inclusivity of your website
by offering content in multiple languages, making it more user-friendly for a diverse
international audience.

• Minor module: Add accessibility for Visually Impaired Users.
In this minor module, the goal is to make your website more accessible for visually
impaired users. Key features include:
◦ Support for screen readers and assistive technologies.
◦ Clear and descriptive alt text for images.
◦ High-contrast color scheme for readability.
◦ Keyboard navigation and focus management.
◦ Options for adjusting text size.
◦ Regular updates to meet accessibility standards.
This module aims to improve the website’s usability for individuals with visual
impairments and ensure compliance with accessibility standards.
